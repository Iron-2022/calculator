#include <QApplication>
#include <QQmlApplicationEngine>
#include <QQmlContext>
#include <QQuickStyle>
#include <QtQml> // Добавляем для qmlRegisterType

#include "counter.h"
#include "datamodel.h" // Подключаем заголовочный файл DataModel

#include <KLocalizedString>

int main(int argc, char *argv[])
{
    QQuickStyle::setStyle(QStringLiteral("RosaStyle"));

    QApplication app(argc, argv);
    KLocalizedString::setApplicationDomain("1");

    // Регистрация C++ типов для использования в QML
    qmlRegisterType<Calculator>("counter", 1, 0, "Counter");
    qmlRegisterType<DataModel>("History", 1, 0, "DataModel");

    QQmlApplicationEngine engine;
    engine.rootContext()->setContextObject(new KLocalizedContext(&engine));
    engine.addImportPath(QStringLiteral("qrc:/qml"));
    
    engine.load(QUrl(QStringLiteral("qrc:/qml/Main.qml")));

    return app.exec();
}
